% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NumRange.R
\docType{data}
\name{.NumRange}
\alias{.NumRange}
\title{Continuous Numeric Range Class}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
NR
 $new(lower, upper, mode='inclusive', text)
 $include(x)
 $arrrange(step=(upper-lower)/10)
 $cut(..., mode)
 $print(raw = FALSE)
 $raw
 $Mode
}
\arguments{
\item{lower}{Lower limit of the range}

\item{upper}{Upper limit of the range}

\item{mode}{A vector of length 2 declaring modes for lower and upper. Default is "inclusive". Modes for lower can be "min" or "inf" for lower-inclusive and -exclusive, respectively. Mode for upper can be "max" or "sup" for upper-inclusive or -exclusive. Shorthand for mode = c("min", "max") is "inclusive"; and shorthand for mode = c("inf", sup") is "exclusive".}

\item{text}{A syntax-aware string to be convert to NumRange. See Details.}

\item{x}{A numeric vector}

\item{step}{The step of the new sequence. Similar to step parameter in seq()}

\item{...}{All the split points at which the range will be cut.}

\item{raw}{If TRUE, similar to $raw}
}
\value{
An object of R6Class="NumRange"
}
\description{
An R6 object for continuous numeric ranges
}
\details{
This function create a numeric range, via which you can check if a specific number is included or not.
One formal one to create a new range is via method $new(lower, upper, mode) where mode defines how the range boundaries will behave.
Mode is a length-two vector defining the each boundaries'mode.

Accepted modes for lower limit are "inf" for exclusive lower bound and "min" for lower limit inclusion.
Accepted modes for upper limit are "sup" for exclusive upper bound and "max" for upper limit inclusion.

Shorthand for mode = c('min', 'max') is 'inclusive'.
Shorthand for mode = c('inf', 'sup') is 'exclusive'.

Another way to create a NumRange is via text=string conversion.
Character string should be in a form "(a,b)", "[a,b)", "(a, b]", or "(a, b)".

After creation, you can use some built-in methods.

- $include will check if some provided numbers are included inside a range.

- $arrange will create a sequence for the range with a definded step.

- $cut will cut the range into small range at the cutting point.

- $print will print the range in a beautified way.

- $raw will return a string that contains the range.

- $Mode will return the provided mode of the range.

Note that $new, $include, $print(raw = FALSE) will accept method chaining.
}
\keyword{datasets}
